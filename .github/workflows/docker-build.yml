name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # O tu rama principal

env:
  REGISTRO: ghcr.io
  REPO_NOMBRE_LOWER: danysoftdev/microservicio-go-mongodb
  DOCKERHUB_REPO: danysoftdev/parcial-go

jobs:
  test-build-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'  # o tu versión de Go

      - name: ✅ Run Unit Tests
        run: |
          echo "🧪 Running unit tests..."
          go test -v ./... -tags="!integration" -cover

      - name: 🧪 Run Integration Tests (Testcontainers)
        run: |
          echo "🌐 Running integration tests..."
          go test -v ./... -tags=integration

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRO }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔐 Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🌱 Create .env file for Docker Compose
        run: |
          echo "MONGO_ROOT_USER=${{ secrets.MONGO_ROOT_USER }}" > .env
          echo "MONGO_ROOT_PASS=${{ secrets.MONGO_ROOT_PASS }}" >> .env
          echo "MONGO_HOST=mongo" >> .env
          echo "MONGO_PORT=27017" >> .env
          echo "MONGO_DB=${{ secrets.MONGO_DB }}" >> .env
          echo "COLLECTION_NAME=${{ secrets.COLLECTION_NAME }}" >> .env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env

      - name: 🔁 Run Docker Compose Integration Test
        run: |
          docker compose --profile test --env-file .env up --abort-on-container-exit
          docker compose down

      - name: 🧾 Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRO }}/${{ env.REPO_NOMBRE_LOWER }}
            ${{ env.DOCKERHUB_REPO }}

      - name: 🏗️ Build Docker image (locally)
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true  # build locally (no push)
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: 🔍 Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.REGISTRO }}/${{ env.REPO_NOMBRE_LOWER }}:latest
          format: table
          severity: CRITICAL,HIGH
          exit-code: 1

      - name: 🚀 Push Docker image to GHCR and DockerHub
        uses: docker/build-push-action@v5
        if: success()  # solo si Trivy no falló
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


